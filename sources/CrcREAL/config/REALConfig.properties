# ////////////////////////////////////////////////////////////////////////////
# ////////////////////// General Configuration ///////////////////////////////
# ////////////////////////////////////////////////////////////////////////////

# parallelism configuration
crc.real.basicconfig.corethreads = 4
crc.real.basicconfig.additionalthreads = 0
# when to evaluate populations
crc.real.stats.evalCycle = generation
# what to evaluate: elite | all
crc.real.stats.evalIndividuals = all
crc.real.stats.evalBound = 5000
# ////////////////////////////////////////////////////////////////////////////
# //////////////////// Algorithm Configuration ///////////////////////////////
# ////////////////////////////////////////////////////////////////////////////

# crc.real.learner.vrh
# crc.real.learner.svrh
# crc.real.learner.avrh
# crc.real.learner.avrh2
# crc.real.learner.avrh3
# crc.real.learner.bl
# crc.real.learner.sbl
# crc.real.learner.pbl
# crc.real.learner.vrhbl
crc.real.runConf.algorithms = crc.real.learner.svrh
crc.real.runConf.randomnessSeed = 123456
crc.real.runConf.maxTestLength = 20
crc.real.runConf.numberOfSamples = 1
crc.real.runConf.numberOfStates = 5
crc.real.runConf.sizeOfAlphabet = 4
crc.real.runConf.sizeOfTrainingSet = 10
crc.real.runConf.numberOfRounds = 10
crc.real.runConf.sizeOfPopulation = 100
crc.real.runConf.numberOfGenerations = 10

# ////////////////////////////////////////////////////////////////////////////
# //////////////////// Algorithm Configuration ///////////////////////////////
# ////////////////////////////////////////////////////////////////////////////

# model objectives
# crc.real.objective.model.alltestexamples
# crc.real.objective.model.positivetestexample
# crc.real.objective.model.negativetestexample
# crc.real.objective.model.modelsize
# crc.real.objective.model.relevantpart
# crc.real.objective.model.countsinkstates

# test objectives
# crc.real.objective.test.disagreement
# crc.real.objective.test.testlength

# ////////////////////////////////////////////////////////////////////////////
# VRH (Passive)
crc.real.vrh.modelObjectives = crc.real.objective.model.relevantpart, crc.real.objective.model.countsinkstates, crc.real.objective.model.positivetestexample, crc.real.objective.model.negativetestexample, crc.real.objective.model.alltestexamples, crc.real.objective.model.modelsize
crc.real.vrh.passiveModelObjectives = crc.real.objective.model.alltestexamples, crc.real.objective.model.modelsize
# ////////////////////////////////////////////////////////////////////////////

crc.real.svrh.modelObjectives = crc.real.objective.model.relevantpart, crc.real.objective.model.countsinkstates, crc.real.objective.model.positivetestexample, crc.real.objective.model.negativetestexample, crc.real.objective.model.alltestexamples, crc.real.objective.model.modelsize
crc.real.svrh.passiveModelObjectives = crc.real.objective.model.alltestexamples, crc.real.objective.model.modelsize

crc.real.avrh.modelObjectives = crc.real.objective.model.relevantpart, crc.real.objective.model.countsinkstates, crc.real.objective.model.positivetestexample, crc.real.objective.model.negativetestexample, crc.real.objective.model.alltestexamples, crc.real.objective.model.modelsize
crc.real.avrh.passiveModelObjectives = crc.real.objective.model.alltestexamples, crc.real.objective.model.modelsize